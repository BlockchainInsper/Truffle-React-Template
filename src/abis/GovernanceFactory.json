{
  "contractName": "GovernanceFactory",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_activeGovernance",
      "outputs": [
        {
          "internalType": "contract TokenGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "changeActive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "newToken",
          "type": "address"
        }
      ],
      "name": "changeGovernance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getGovernance",
      "outputs": [
        {
          "internalType": "contract TokenGovernance",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getGovernanceStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_activeGovernance\",\"outputs\":[{\"internalType\":\"contract TokenGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"changeActive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"newToken\",\"type\":\"address\"}],\"name\":\"changeGovernance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernance\",\"outputs\":[{\"internalType\":\"contract TokenGovernance\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGovernanceStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/GovernanceFactory.sol\":\"GovernanceFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xdadd41acb749920eccf40aeaa8d291adf9751399a7343561bad13e7a8d99be0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12af4ac016f9fdf3be5d15824f4292272aa11f6b2e0192a0f7320f5ad49bbbf0\",\"dweb:/ipfs/QmRXMpdqCgA3TYuYxBodqs5p9jGbnMW6xa2gvjppvq4TWk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87a7a5d2f6f63f84598af02b8c50ca2df2631cb8ba2453e8d95fcb17e4be9824\",\"dweb:/ipfs/QmR76hqtAcRqoFj33tmNjcWTLrgNsAaakYwnKZ8zoJtKei\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/src/contracts/Coin.sol\":{\"keccak256\":\"0xae76087e95d0a1ae267862f56bd1838a0795b4a71377a51a7408d851016cbf97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f8f7a1a38a1bf75cbb7d4df171da2c6e52181f30e9d201f5417328c92e58f0b\",\"dweb:/ipfs/QmZRp8tYwgNFNNgSzPat1tFsdioCmGvwagyWPQCh6KHiwU\"]},\"project:/src/contracts/GovernanceFactory.sol\":{\"keccak256\":\"0x568c6748fe01080eacf0e1d180da05c6baffeeb8a5e6ec231d34e73d6be0c7f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://226ad6d06c3d85263c3a060eca3565d8ea9589b941df9e51ddb004f607d0292f\",\"dweb:/ipfs/QmcQZPfASMf9GKKJX47ywqRB1DapyUbbvKncWUkwyhLHae\"]},\"project:/src/contracts/TokenGovernance.sol\":{\"keccak256\":\"0xc0e74c2df220ed62d1713194c10c7ad4649d7a8da459bb8444a636eb4a1b54a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff73235f35b4e145792ad6a711956e2a7be4410218c36cf873b2fd41ecb5ff17\",\"dweb:/ipfs/QmUphi7YiqEb5Q7qFSa4NWW2oi4YayvuHBsbhgHkyZ2q6H\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200006a5760003560e01c806321df0da7146200006f578063289b3c0d14620000915780634a69220414620000b357806399572d6f14620000d5578063b4ac0dfc14620000f5578063e8776c261462000101575b600080fd5b6200007962000123565b604051620000889190620006aa565b60405180910390f35b6200009b620001cd565b604051620000aa9190620006c7565b60405180910390f35b620000bd620001f6565b604051620000cc91906200068d565b60405180910390f35b620000f36004803603810190620000ed91906200051a565b620002a0565b005b620000ff6200031b565b005b6200010b62000469565b6040516200011a9190620006c7565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166321df0da76040518163ffffffff1660e01b815260040160206040518083038186803b1580156200018d57600080fd5b505afa158015620001a2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c8919062000546565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e69d5606040518163ffffffff1660e01b815260040160206040518083038186803b1580156200026057600080fd5b505afa15801562000275573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029b9190620004ee565b905090565b80604051620002af906200048d565b620002bb9190620006aa565b604051809103906000f080158015620002d8573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634e69d5606040518163ffffffff1660e01b815260040160206040518083038186803b1580156200038257600080fd5b505afa15801562000397573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003bd9190620004ee565b620003ff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003f690620006e4565b60405180910390fd5b60007388acc3c7bfb23e6a58f2a80c1322a21ca7fef25e6801158e460913d000006040516200042e906200049b565b6200043b92919062000706565b604051809103906000f08015801562000458573d6000803e3d6000fd5b5090506200046681620002a0565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610808806200086583390190565b6119b3806200106d83390190565b600081519050620004ba8162000830565b92915050565b600081359050620004d1816200084a565b92915050565b600081519050620004e8816200084a565b92915050565b6000602082840312156200050157600080fd5b60006200051184828501620004a9565b91505092915050565b6000602082840312156200052d57600080fd5b60006200053d84828501620004c0565b91505092915050565b6000602082840312156200055957600080fd5b60006200056984828501620004d7565b91505092915050565b6200057d816200076e565b82525050565b6200058e8162000782565b82525050565b6200059f81620007cc565b82525050565b620005b081620007f4565b82525050565b620005c1816200081c565b82525050565b6000620005d66012836200075d565b91507f766f7465206e6f742066696e616c697a656400000000000000000000000000006000830152602082019050919050565b6000620006186003836200075d565b91507f74737400000000000000000000000000000000000000000000000000000000006000830152602082019050919050565b60006200065a6005836200075d565b91507f74657374650000000000000000000000000000000000000000000000000000006000830152602082019050919050565b6000602082019050620006a4600083018462000583565b92915050565b6000602082019050620006c1600083018462000594565b92915050565b6000602082019050620006de6000830184620005a5565b92915050565b60006020820190508181036000830152620006ff81620005c7565b9050919050565b6000608082019050818103600083015262000721816200064b565b90508181036020830152620007368162000609565b905062000747604083018562000572565b620007566060830184620005b6565b9392505050565b600082825260208201905092915050565b60006200077b82620007a2565b9050919050565b60008115159050919050565b60006200079b826200076e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000620007d982620007e0565b9050919050565b6000620007ed82620007a2565b9050919050565b6000620008018262000808565b9050919050565b60006200081582620007a2565b9050919050565b60006200082982620007c2565b9050919050565b6200083b8162000782565b81146200084757600080fd5b50565b62000855816200078e565b81146200086157600080fd5b5056fe608060405234801561001057600080fd5b506040516108083803806108088339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610111565b600081519050610087816100fa565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100da565b9050919050565b60006100d3826100b6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b610103816100c8565b811461010e57600080fd5b50565b6106e8806101206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b92239461161005b578063b922394614610103578063c659b4f41461010d578063d082e3811461012b578063ecd0c0c31461014957610088565b806309eef43e1461008d57806321df0da7146100bd5780634e69d560146100db578063632a9a52146100f9575b600080fd5b6100a760048036038101906100a29190610450565b610167565b6040516100b491906104f9565b60405180910390f35b6100c56101bd565b6040516100d29190610514565b60405180910390f35b6100e36101e6565b6040516100f091906104f9565b60405180910390f35b6101016101fd565b005b61010b6103a1565b005b6101156103f6565b604051610122919061052f565b60405180910390f35b6101336103fc565b604051610140919061052f565b60405180910390f35b610151610402565b60405161015e9190610514565b60405180910390f35b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900460ff16905090565b600460009054906101000a900460ff161561021757600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561026e57600080fd5b6001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008154809291906102d99061060c565b919050555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161033791906104de565b60206040518083038186803b15801561034f57600080fd5b505afa158015610363573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103879190610479565b60026000828254610398919061054a565b92505081905550565b600460009054906101000a900460ff16156103bb57600080fd5b6002600154116103ca57600080fd5b6005600254116103d957600080fd5b6001600460006101000a81548160ff021916908315150217905550565b60015481565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061043581610684565b92915050565b60008151905061044a8161069b565b92915050565b60006020828403121561046257600080fd5b600061047084828501610426565b91505092915050565b60006020828403121561048b57600080fd5b60006104998482850161043b565b91505092915050565b6104ab816105a0565b82525050565b6104ba816105b2565b82525050565b6104c9816105e8565b82525050565b6104d8816105de565b82525050565b60006020820190506104f360008301846104a2565b92915050565b600060208201905061050e60008301846104b1565b92915050565b600060208201905061052960008301846104c0565b92915050565b600060208201905061054460008301846104cf565b92915050565b6000610555826105de565b9150610560836105de565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561059557610594610655565b5b828201905092915050565b60006105ab826105be565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006105f3826105fa565b9050919050565b6000610605826105be565b9050919050565b6000610617826105de565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561064a57610649610655565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61068d816105a0565b811461069857600080fd5b50565b6106a4816105de565b81146106af57600080fd5b5056fea2646970667358221220d754bac0da6944f9251c4bf963d28e4dc14fdde3da72269348f28797c315c32564736f6c634300080000336080604052604051620019b3380380620019b383398181016040528101906200002991906200034e565b8383816003908051906020019062000043929190620001fe565b5080600490805190602001906200005c929190620001fe565b5050506200007182826200007b60201b60201c565b50505050620006be565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415620000ee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000e5906200043f565b60405180910390fd5b6200010260008383620001f460201b60201c565b8060026000828254620001169190620004f6565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546200016d9190620004f6565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620001d4919062000461565b60405180910390a3620001f060008383620001f960201b60201c565b5050565b505050565b505050565b8280546200020c90620005c7565b90600052602060002090601f0160209004810192826200023057600085556200027c565b82601f106200024b57805160ff19168380011785556200027c565b828001600101855582156200027c579182015b828111156200027b5782518255916020019190600101906200025e565b5b5090506200028b91906200028f565b5090565b5b80821115620002aa57600081600090555060010162000290565b5090565b6000620002c5620002bf84620004b2565b6200047e565b905082815260208101848484011115620002de57600080fd5b620002eb84828562000591565b509392505050565b60008151905062000304816200068a565b92915050565b600082601f8301126200031c57600080fd5b81516200032e848260208601620002ae565b91505092915050565b6000815190506200034881620006a4565b92915050565b600080600080608085870312156200036557600080fd5b600085015167ffffffffffffffff8111156200038057600080fd5b6200038e878288016200030a565b945050602085015167ffffffffffffffff811115620003ac57600080fd5b620003ba878288016200030a565b9350506040620003cd87828801620002f3565b9250506060620003e08782880162000337565b91505092959194509250565b6000620003fb601f83620004e5565b91507f45524332303a206d696e7420746f20746865207a65726f2061646472657373006000830152602082019050919050565b620004398162000587565b82525050565b600060208201905081810360008301526200045a81620003ec565b9050919050565b60006020820190506200047860008301846200042e565b92915050565b6000604051905081810181811067ffffffffffffffff82111715620004a857620004a76200065b565b5b8060405250919050565b600067ffffffffffffffff821115620004d057620004cf6200065b565b5b601f19601f8301169050602081019050919050565b600082825260208201905092915050565b6000620005038262000587565b9150620005108362000587565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620005485762000547620005fd565b5b828201905092915050565b6000620005608262000567565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015620005b157808201518184015260208101905062000594565b83811115620005c1576000848401525b50505050565b60006002820490506001821680620005e057607f821691505b60208210811415620005f757620005f66200062c565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620006958162000553565b8114620006a157600080fd5b50565b620006af8162000587565b8114620006bb57600080fd5b50565b6112e580620006ce6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610fae565b60405180910390f35b6100e660048036038101906100e19190610c4d565b610308565b6040516100f39190610f93565b60405180910390f35b61010461032b565b60405161011191906110b0565b60405180910390f35b610134600480360381019061012f9190610bfe565b610335565b6040516101419190610f93565b60405180910390f35b610152610364565b60405161015f91906110cb565b60405180910390f35b610182600480360381019061017d9190610c4d565b61036d565b60405161018f9190610f93565b60405180910390f35b6101b260048036038101906101ad9190610b99565b610417565b6040516101bf91906110b0565b60405180910390f35b6101d061045f565b6040516101dd9190610fae565b60405180910390f35b61020060048036038101906101fb9190610c4d565b6104f1565b60405161020d9190610f93565b60405180910390f35b610230600480360381019061022b9190610c4d565b6105db565b60405161023d9190610f93565b60405180910390f35b610260600480360381019061025b9190610bc2565b6105fe565b60405161026d91906110b0565b60405180910390f35b606060038054610285906111e0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b1906111e0565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600080610313610685565b905061032081858561068d565b600191505092915050565b6000600254905090565b600080610340610685565b905061034d858285610858565b6103588585856108e4565b60019150509392505050565b60006012905090565b600080610378610685565b905061040c818585600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104079190611102565b61068d565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461046e906111e0565b80601f016020809104026020016040519081016040528092919081815260200182805461049a906111e0565b80156104e75780601f106104bc576101008083540402835291602001916104e7565b820191906000526020600020905b8154815290600101906020018083116104ca57829003601f168201915b5050505050905090565b6000806104fc610685565b90506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838110156105c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b990611090565b60405180910390fd5b6105cf828686840361068d565b60019250505092915050565b6000806105e6610685565b90506105f38185856108e4565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f490611070565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561076d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076490610ff0565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161084b91906110b0565b60405180910390a3505050565b600061086484846105fe565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146108de57818110156108d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c790611010565b60405180910390fd5b6108dd848484840361068d565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094b90611050565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109bb90610fd0565b60405180910390fd5b6109cf838383610b65565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c90611030565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ae89190611102565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b4c91906110b0565b60405180910390a3610b5f848484610b6a565b50505050565b505050565b505050565b600081359050610b7e81611281565b92915050565b600081359050610b9381611298565b92915050565b600060208284031215610bab57600080fd5b6000610bb984828501610b6f565b91505092915050565b60008060408385031215610bd557600080fd5b6000610be385828601610b6f565b9250506020610bf485828601610b6f565b9150509250929050565b600080600060608486031215610c1357600080fd5b6000610c2186828701610b6f565b9350506020610c3286828701610b6f565b9250506040610c4386828701610b84565b9150509250925092565b60008060408385031215610c6057600080fd5b6000610c6e85828601610b6f565b9250506020610c7f85828601610b84565b9150509250929050565b610c928161116a565b82525050565b6000610ca3826110e6565b610cad81856110f1565b9350610cbd8185602086016111ad565b610cc681611270565b840191505092915050565b6000610cde6023836110f1565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d446022836110f1565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610daa601d836110f1565b91507f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006000830152602082019050919050565b6000610dea6026836110f1565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e506025836110f1565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610eb66024836110f1565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f1c6025836110f1565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610f7e81611196565b82525050565b610f8d816111a0565b82525050565b6000602082019050610fa86000830184610c89565b92915050565b60006020820190508181036000830152610fc88184610c98565b905092915050565b60006020820190508181036000830152610fe981610cd1565b9050919050565b6000602082019050818103600083015261100981610d37565b9050919050565b6000602082019050818103600083015261102981610d9d565b9050919050565b6000602082019050818103600083015261104981610ddd565b9050919050565b6000602082019050818103600083015261106981610e43565b9050919050565b6000602082019050818103600083015261108981610ea9565b9050919050565b600060208201905081810360008301526110a981610f0f565b9050919050565b60006020820190506110c56000830184610f75565b92915050565b60006020820190506110e06000830184610f84565b92915050565b600081519050919050565b600082825260208201905092915050565b600061110d82611196565b915061111883611196565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561114d5761114c611212565b5b828201905092915050565b600061116382611176565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b838110156111cb5780820151818401526020810190506111b0565b838111156111da576000848401525b50505050565b600060028204905060018216806111f857607f821691505b6020821081141561120c5761120b611241565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b61128a81611158565b811461129557600080fd5b50565b6112a181611196565b81146112ac57600080fd5b5056fea2646970667358221220c58a5d3763435dc7aea2ea929cda1f99c4dab7e2b8addc5752cab6870543267d64736f6c63430008000033a264697066735822122092a5fd87760f06a7df454015d5e1c75e052989b604cfccd7630d72a50eec22f564736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3285:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "72:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "89:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "112:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "94:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "94:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "82:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "60:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "67:3:7",
                "type": ""
              }
            ],
            "src": "7:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "209:79:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "226:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "275:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$587_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "231:43:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:50:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "219:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "219:63:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "219:63:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "197:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "204:3:7",
                "type": ""
              }
            ],
            "src": "131:157:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "386:93:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "403:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "466:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_20000000000000000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "408:57:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "408:64:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "396:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "396:77:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "396:77:7"
                }
              ]
            },
            "name": "abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "374:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "381:3:7",
                "type": ""
              }
            ],
            "src": "294:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "631:154:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "641:73:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "707:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "712:1:7",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "648:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:66:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "641:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "735:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "740:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "731:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "731:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "744:5:7",
                        "type": "",
                        "value": "tst"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "724:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "724:26:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "724:26:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "760:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "771:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "776:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "767:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "760:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "619:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "627:3:7",
                "type": ""
              }
            ],
            "src": "485:300:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "937:156:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "947:73:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1013:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1018:1:7",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "954:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:66:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "947:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1041:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1046:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1037:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1037:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1050:7:7",
                        "type": "",
                        "value": "teste"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1030:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1030:28:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1030:28:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1068:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1079:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1084:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1075:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1075:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1068:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "925:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "933:3:7",
                "type": ""
              }
            ],
            "src": "791:302:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1210:137:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1220:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1232:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1243:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1228:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1228:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1220:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1313:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1326:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1337:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1322:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1322:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1256:56:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:84:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1256:84:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1182:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1194:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1205:4:7",
                "type": ""
              }
            ],
            "src": "1099:248:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1708:646:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1718:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1730:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1741:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1726:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1726:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1718:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1766:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1777:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1762:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1762:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1785:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1791:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1781:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1781:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1755:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1755:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1755:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1811:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1945:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1819:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1811:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1971:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1982:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1967:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1967:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1991:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1997:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1987:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1987:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1960:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1960:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1960:48:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2017:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2151:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2025:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2025:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2017:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2210:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2223:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2234:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2219:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2219:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2166:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2166:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2166:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2319:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2332:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2343:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2328:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2328:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2248:70:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2248:99:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2248:99:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_t_address_t_rational_20000000000000000000_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1672:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1684:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1692:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1703:4:7",
                "type": ""
              }
            ],
            "src": "1353:1001:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2456:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2473:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2478:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2466:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2466:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2494:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2513:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2518:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2509:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2509:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2494:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2428:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2433:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2444:11:7",
                "type": ""
              }
            ],
            "src": "2360:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2580:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2590:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2619:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2601:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2601:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2590:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2562:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2572:7:7",
                "type": ""
              }
            ],
            "src": "2535:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2682:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2692:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2707:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2714:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2703:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2703:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2692:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2664:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2674:7:7",
                "type": ""
              }
            ],
            "src": "2637:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2814:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2824:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2835:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "2824:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2796:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "2806:7:7",
                "type": ""
              }
            ],
            "src": "2769:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2925:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2935:63:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2992:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "2948:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2948:50:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "2935:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2905:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "2915:9:7",
                "type": ""
              }
            ],
            "src": "2852:152:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3083:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3093:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3124:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3106:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3093:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3063:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3073:9:7",
                "type": ""
              }
            ],
            "src": "3010:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3229:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3239:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3270:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "3252:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3252:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "3239:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_20000000000000000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3209:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "3219:9:7",
                "type": ""
              }
            ],
            "src": "3142:140:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$587_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_20000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n\n        mstore(add(pos, 0), \"tst\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n\n        mstore(add(pos, 0), \"teste\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_t_address_t_rational_20000000000000000000_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 64))\n\n        abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20_$587_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_rational_20000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7010:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:77:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "77:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "92:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "86:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "77:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "132:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "108:23:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:30:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "108:30:7"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "45:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "53:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "61:5:7",
                "type": ""
              }
            ],
            "src": "7:137:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "215:100:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "225:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "247:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "234:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "234:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "225:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "303:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$587",
                      "nodeType": "YulIdentifier",
                      "src": "263:39:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "263:46:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "263:46:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$587",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "193:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "201:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "209:5:7",
                "type": ""
              }
            ],
            "src": "150:165:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "397:93:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "407:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "422:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "416:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "416:13:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "407:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "478:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC20_$587",
                      "nodeType": "YulIdentifier",
                      "src": "438:39:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "438:46:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "438:46:7"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC20_$587_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "375:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "383:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "391:5:7",
                "type": ""
              }
            ],
            "src": "321:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "570:204:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "616:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "625:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "628:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "618:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "618:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "618:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "591:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "600:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "587:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "587:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "612:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "583:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "583:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "580:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "642:125:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "657:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "671:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "661:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "686:71:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "729:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "740:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "725:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "725:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "749:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "696:28:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "696:61:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "686:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "540:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "551:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "563:6:7",
                "type": ""
              }
            ],
            "src": "496:278:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "859:209:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "905:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "914:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "917:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "907:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "907:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "907:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "880:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "889:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "876:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "876:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "901:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "872:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "872:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "869:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "931:130:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "946:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "960:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "950:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "975:76:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1023:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1034:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1019:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1019:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1043:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$587",
                          "nodeType": "YulIdentifier",
                          "src": "985:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "985:66:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "975:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$587",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "829:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "840:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "852:6:7",
                "type": ""
              }
            ],
            "src": "780:288:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1164:220:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1210:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1219:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1222:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1212:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1212:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1212:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1185:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1194:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1181:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1181:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1206:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1177:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1177:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "1174:2:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1236:141:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1251:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1265:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1255:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1280:87:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1339:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1350:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1335:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1335:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1359:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC20_$587_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1290:44:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1290:77:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1280:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ERC20_$587_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1134:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1145:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1157:6:7",
                "type": ""
              }
            ],
            "src": "1074:310:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1455:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1472:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1495:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1477:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1477:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1465:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1465:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1465:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1443:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1450:3:7",
                "type": ""
              }
            ],
            "src": "1390:118:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1573:50:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1590:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1610:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "1595:14:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1595:21:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1583:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1583:34:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1583:34:7"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1561:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1568:3:7",
                "type": ""
              }
            ],
            "src": "1514:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1707:79:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1724:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1773:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$587_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1729:43:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1729:50:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1717:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1717:63:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1717:63:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1695:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1702:3:7",
                "type": ""
              }
            ],
            "src": "1629:157:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1880:89:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1897:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1956:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_TokenGovernance_$962_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1902:53:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1902:60:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1890:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1890:73:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1890:73:7"
                }
              ]
            },
            "name": "abi_encode_t_contract$_TokenGovernance_$962_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1868:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1875:3:7",
                "type": ""
              }
            ],
            "src": "1792:177:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2067:93:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2084:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2147:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_rational_20000000000000000000_by_1_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2089:57:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2089:64:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2077:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2077:77:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2077:77:7"
                }
              ]
            },
            "name": "abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2055:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2062:3:7",
                "type": ""
              }
            ],
            "src": "1975:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2312:170:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2322:74:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2388:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2393:2:7",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2329:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2329:67:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2322:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2417:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2422:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2413:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2413:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2426:20:7",
                        "type": "",
                        "value": "vote not finalized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2406:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2406:41:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2406:41:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2457:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2468:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2473:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2464:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2464:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2457:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2300:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2308:3:7",
                "type": ""
              }
            ],
            "src": "2166:316:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2634:154:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2644:73:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2710:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2715:1:7",
                        "type": "",
                        "value": "3"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2651:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2651:66:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2644:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2738:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2743:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2734:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2734:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2747:5:7",
                        "type": "",
                        "value": "tst"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2727:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2727:26:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2727:26:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2763:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2774:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2779:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2770:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2770:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2763:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2622:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2630:3:7",
                "type": ""
              }
            ],
            "src": "2488:300:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2940:156:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2950:73:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3016:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3021:1:7",
                        "type": "",
                        "value": "5"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2957:58:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2957:66:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2950:3:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3044:3:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3049:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3040:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3040:11:7"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3053:7:7",
                        "type": "",
                        "value": "teste"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3033:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3033:28:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3033:28:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3071:19:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3082:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3087:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3078:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3071:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2928:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2936:3:7",
                "type": ""
              }
            ],
            "src": "2794:302:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3194:118:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3204:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3216:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3227:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3212:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3212:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3204:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3278:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3291:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3302:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3287:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3287:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3240:37:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3240:65:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3240:65:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3166:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3178:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3189:4:7",
                "type": ""
              }
            ],
            "src": "3102:210:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3429:137:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3439:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3451:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3462:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3447:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3447:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3439:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3532:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3545:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3556:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3541:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3541:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3475:56:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3475:84:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3475:84:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3401:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3413:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3424:4:7",
                "type": ""
              }
            ],
            "src": "3318:248:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3693:147:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3703:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3715:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3726:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3711:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3711:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3703:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3806:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3819:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3830:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3815:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3815:17:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_TokenGovernance_$962_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3739:66:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3739:94:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3739:94:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_TokenGovernance_$962__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3665:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3677:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3688:4:7",
                "type": ""
              }
            ],
            "src": "3572:268:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4017:248:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4027:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4039:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4050:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4035:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4035:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4027:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4074:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4085:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4070:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4070:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4093:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4099:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4089:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4089:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4063:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4063:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4063:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4119:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4253:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4127:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4127:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4119:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3997:9:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4012:4:7",
                "type": ""
              }
            ],
            "src": "3846:419:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4626:646:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4636:27:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4648:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4659:3:7",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4644:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4644:19:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4636:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4684:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4695:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4680:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4680:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4703:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4709:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4699:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4699:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4673:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4673:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4673:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4729:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4863:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4737:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4737:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4729:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4889:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4900:2:7",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4885:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4885:18:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "4909:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4915:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4905:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4905:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4878:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4878:48:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4878:48:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4935:139:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5069:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4943:124:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4943:131:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4935:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5128:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5141:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5152:2:7",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5137:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5137:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5084:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5084:72:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5084:72:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5237:6:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5250:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5261:2:7",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5246:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5246:18:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5166:70:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5166:99:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5166:99:7"
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_t_address_t_rational_20000000000000000000_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4590:9:7",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4602:6:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4610:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4621:4:7",
                "type": ""
              }
            ],
            "src": "4271:1001:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5374:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5391:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5396:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5384:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5384:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5384:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5412:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5431:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5436:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5427:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5427:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5412:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5346:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5351:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5362:11:7",
                "type": ""
              }
            ],
            "src": "5278:169:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5498:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5508:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5537:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "5519:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5519:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5508:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5480:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5490:7:7",
                "type": ""
              }
            ],
            "src": "5453:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5597:48:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5607:32:7",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5632:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5625:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5625:13:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5618:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5618:21:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5607:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5579:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5589:7:7",
                "type": ""
              }
            ],
            "src": "5555:90:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5709:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5719:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5748:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "5730:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5730:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5719:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC20_$587",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5691:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5701:7:7",
                "type": ""
              }
            ],
            "src": "5651:109:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5811:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5821:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5836:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5843:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "5832:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5832:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5821:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5793:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5803:7:7",
                "type": ""
              }
            ],
            "src": "5766:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5943:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5953:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5964:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5953:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5925:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5935:7:7",
                "type": ""
              }
            ],
            "src": "5898:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6054:79:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6064:63:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6121:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6077:43:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:50:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6064:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6034:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6044:9:7",
                "type": ""
              }
            ],
            "src": "5981:152:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6212:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6222:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6253:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6235:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6235:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6222:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$587_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6192:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6202:9:7",
                "type": ""
              }
            ],
            "src": "6139:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6354:89:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6364:73:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6431:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_TokenGovernance_$962_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6377:53:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6377:60:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6364:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_TokenGovernance_$962_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6334:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6344:9:7",
                "type": ""
              }
            ],
            "src": "6271:172:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6532:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6542:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6573:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "6555:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6555:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6542:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_TokenGovernance_$962_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6512:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6522:9:7",
                "type": ""
              }
            ],
            "src": "6449:136:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6678:53:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6688:37:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6719:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6701:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6701:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "6688:9:7"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_rational_20000000000000000000_by_1_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6658:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "6668:9:7",
                "type": ""
              }
            ],
            "src": "6591:140:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6777:76:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6831:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6840:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6843:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6833:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6833:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6833:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6800:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6822:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "6807:14:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6807:21:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6797:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6797:32:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6790:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6790:40:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6787:2:7"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6770:5:7",
                "type": ""
              }
            ],
            "src": "6737:116:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6915:92:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6985:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6994:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6997:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6987:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6987:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6987:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6938:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6976:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC20_$587",
                              "nodeType": "YulIdentifier",
                              "src": "6945:30:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6945:37:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6935:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6935:48:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6928:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6928:56:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6925:2:7"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC20_$587",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6908:5:7",
                "type": ""
              }
            ],
            "src": "6859:148:7"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$587(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_ERC20_$587(value)\n    }\n\n    function abi_decode_t_contract$_ERC20_$587_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC20_$587(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$587(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$587(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_ERC20_$587_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC20_$587_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$587_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_TokenGovernance_$962_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_TokenGovernance_$962_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_20000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n\n        mstore(add(pos, 0), \"vote not finalized\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 3)\n\n        mstore(add(pos, 0), \"tst\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 5)\n\n        mstore(add(pos, 0), \"teste\")\n\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$587__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$587_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_TokenGovernance_$962__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_TokenGovernance_$962_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_t_address_t_rational_20000000000000000000_by_1__to_t_string_memory_ptr_t_string_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa_to_t_string_memory_ptr_fromStack( tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 64))\n\n        abi_encode_t_rational_20000000000000000000_by_1_to_t_uint256_fromStack(value1,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_contract$_ERC20_$587(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ERC20_$587_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ERC20_$587_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_TokenGovernance_$962_to_t_address(value) -> converted {\n        converted := convert_t_contract$_TokenGovernance_$962_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_TokenGovernance_$962_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_rational_20000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_ERC20_$587(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC20_$587(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "167:1002:5:-:0;;;248:197;;;;;;;;;;272:14;314:42;358:20;289:90;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;272:107;;429:8;409:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;389:17;;:49;;;;;;;;;;;;;;;;;;248:197;167:1002;;;;;;;;;;:::o;:::-;;;;;;;;:::o;7:118:7:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;72:53;;:::o;131:157::-;231:50;275:5;231:50;:::i;:::-;226:3;219:63;209:79;;:::o;294:185::-;408:64;466:5;408:64;:::i;:::-;403:3;396:77;386:93;;:::o;485:300::-;;648:66;712:1;707:3;648:66;:::i;:::-;641:73;;744:5;740:1;735:3;731:11;724:26;776:2;771:3;767:12;760:19;;631:154;;;:::o;791:302::-;;954:66;1018:1;1013:3;954:66;:::i;:::-;947:73;;1050:7;1046:1;1041:3;1037:11;1030:28;1084:2;1079:3;1075:12;1068:19;;937:156;;;:::o;1099:248::-;;1243:2;1232:9;1228:18;1220:26;;1256:84;1337:1;1326:9;1322:17;1313:6;1256:84;:::i;:::-;1210:137;;;;:::o;1353:1001::-;;1741:3;1730:9;1726:19;1718:27;;1791:9;1785:4;1781:20;1777:1;1766:9;1762:17;1755:47;1819:131;1945:4;1819:131;:::i;:::-;1811:139;;1997:9;1991:4;1987:20;1982:2;1971:9;1967:18;1960:48;2025:131;2151:4;2025:131;:::i;:::-;2017:139;;2166:72;2234:2;2223:9;2219:18;2210:6;2166:72;:::i;:::-;2248:99;2343:2;2332:9;2328:18;2319:6;2248:99;:::i;:::-;1708:646;;;;;:::o;2360:169::-;;2478:6;2473:3;2466:19;2518:4;2513:3;2509:14;2494:29;;2456:73;;;;:::o;2535:96::-;;2601:24;2619:5;2601:24;:::i;:::-;2590:35;;2580:51;;;:::o;2637:126::-;;2714:42;2707:5;2703:54;2692:65;;2682:81;;;:::o;2769:77::-;;2835:5;2824:16;;2814:32;;;:::o;2852:152::-;;2948:50;2992:5;2948:50;:::i;:::-;2935:63;;2925:79;;;:::o;3010:126::-;;3106:24;3124:5;3106:24;:::i;:::-;3093:37;;3083:53;;;:::o;3142:140::-;;3252:24;3270:5;3252:24;:::i;:::-;3239:37;;3229:53;;;:::o;167:1002:5:-;;;;;;;",
  "deployedSourceMap": "167:1002:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:99;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;843:103;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;952:110;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;722:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;451:261;;;:::i;:::-;;201:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:99;1108:5;1132:17;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1125:35;;1068:99;:::o;843:103::-;888:15;922:17;;;;;;;;;;;915:24;;843:103;:::o;952:110::-;1003:4;1026:17;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1019:36;;952:110;:::o;722:115::-;821:8;801:29;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;781:17;;:49;;;;;;;;;;;;;;;;;;722:115;:::o;451:261::-;500:17;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;492:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;562:14;604:42;648:20;579:90;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;562:107;;679:26;696:8;679:16;:26::i;:::-;451:261;:::o;201:40::-;;;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;7:137:7:-;;92:6;86:13;77:22;;108:30;132:5;108:30;:::i;:::-;67:77;;;;:::o;150:165::-;;247:6;234:20;225:29;;263:46;303:5;263:46;:::i;:::-;215:100;;;;:::o;321:169::-;;422:6;416:13;407:22;;438:46;478:5;438:46;:::i;:::-;397:93;;;;:::o;496:278::-;;612:2;600:9;591:7;587:23;583:32;580:2;;;628:1;625;618:12;580:2;671:1;696:61;749:7;740:6;729:9;725:22;696:61;:::i;:::-;686:71;;642:125;570:204;;;;:::o;780:288::-;;901:2;889:9;880:7;876:23;872:32;869:2;;;917:1;914;907:12;869:2;960:1;985:66;1043:7;1034:6;1023:9;1019:22;985:66;:::i;:::-;975:76;;931:130;859:209;;;;:::o;1074:310::-;;1206:2;1194:9;1185:7;1181:23;1177:32;1174:2;;;1222:1;1219;1212:12;1174:2;1265:1;1290:77;1359:7;1350:6;1339:9;1335:22;1290:77;:::i;:::-;1280:87;;1236:141;1164:220;;;;:::o;1390:118::-;1477:24;1495:5;1477:24;:::i;:::-;1472:3;1465:37;1455:53;;:::o;1514:109::-;1595:21;1610:5;1595:21;:::i;:::-;1590:3;1583:34;1573:50;;:::o;1629:157::-;1729:50;1773:5;1729:50;:::i;:::-;1724:3;1717:63;1707:79;;:::o;1792:177::-;1902:60;1956:5;1902:60;:::i;:::-;1897:3;1890:73;1880:89;;:::o;1975:185::-;2089:64;2147:5;2089:64;:::i;:::-;2084:3;2077:77;2067:93;;:::o;2166:316::-;;2329:67;2393:2;2388:3;2329:67;:::i;:::-;2322:74;;2426:20;2422:1;2417:3;2413:11;2406:41;2473:2;2468:3;2464:12;2457:19;;2312:170;;;:::o;2488:300::-;;2651:66;2715:1;2710:3;2651:66;:::i;:::-;2644:73;;2747:5;2743:1;2738:3;2734:11;2727:26;2779:2;2774:3;2770:12;2763:19;;2634:154;;;:::o;2794:302::-;;2957:66;3021:1;3016:3;2957:66;:::i;:::-;2950:73;;3053:7;3049:1;3044:3;3040:11;3033:28;3087:2;3082:3;3078:12;3071:19;;2940:156;;;:::o;3102:210::-;;3227:2;3216:9;3212:18;3204:26;;3240:65;3302:1;3291:9;3287:17;3278:6;3240:65;:::i;:::-;3194:118;;;;:::o;3318:248::-;;3462:2;3451:9;3447:18;3439:26;;3475:84;3556:1;3545:9;3541:17;3532:6;3475:84;:::i;:::-;3429:137;;;;:::o;3572:268::-;;3726:2;3715:9;3711:18;3703:26;;3739:94;3830:1;3819:9;3815:17;3806:6;3739:94;:::i;:::-;3693:147;;;;:::o;3846:419::-;;4050:2;4039:9;4035:18;4027:26;;4099:9;4093:4;4089:20;4085:1;4074:9;4070:17;4063:47;4127:131;4253:4;4127:131;:::i;:::-;4119:139;;4017:248;;;:::o;4271:1001::-;;4659:3;4648:9;4644:19;4636:27;;4709:9;4703:4;4699:20;4695:1;4684:9;4680:17;4673:47;4737:131;4863:4;4737:131;:::i;:::-;4729:139;;4915:9;4909:4;4905:20;4900:2;4889:9;4885:18;4878:48;4943:131;5069:4;4943:131;:::i;:::-;4935:139;;5084:72;5152:2;5141:9;5137:18;5128:6;5084:72;:::i;:::-;5166:99;5261:2;5250:9;5246:18;5237:6;5166:99;:::i;:::-;4626:646;;;;;:::o;5278:169::-;;5396:6;5391:3;5384:19;5436:4;5431:3;5427:14;5412:29;;5374:73;;;;:::o;5453:96::-;;5519:24;5537:5;5519:24;:::i;:::-;5508:35;;5498:51;;;:::o;5555:90::-;;5632:5;5625:13;5618:21;5607:32;;5597:48;;;:::o;5651:109::-;;5730:24;5748:5;5730:24;:::i;:::-;5719:35;;5709:51;;;:::o;5766:126::-;;5843:42;5836:5;5832:54;5821:65;;5811:81;;;:::o;5898:77::-;;5964:5;5953:16;;5943:32;;;:::o;5981:152::-;;6077:50;6121:5;6077:50;:::i;:::-;6064:63;;6054:79;;;:::o;6139:126::-;;6235:24;6253:5;6235:24;:::i;:::-;6222:37;;6212:53;;;:::o;6271:172::-;;6377:60;6431:5;6377:60;:::i;:::-;6364:73;;6354:89;;;:::o;6449:136::-;;6555:24;6573:5;6555:24;:::i;:::-;6542:37;;6532:53;;;:::o;6591:140::-;;6701:24;6719:5;6701:24;:::i;:::-;6688:37;;6678:53;;;:::o;6737:116::-;6807:21;6822:5;6807:21;:::i;:::-;6800:5;6797:32;6787:2;;6843:1;6840;6833:12;6787:2;6777:76;:::o;6859:148::-;6945:37;6976:5;6945:37;:::i;:::-;6938:5;6935:48;6925:2;;6997:1;6994;6987:12;6925:2;6915:92;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./TokenGovernance.sol\";\nimport \"./Coin.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract GovernanceFactory {\n\n    TokenGovernance public _activeGovernance;\n\n    constructor() {\n        ERC20 curToken = new Coin(\"teste\", \"tst\", 0x88AcC3c7BFB23e6A58F2A80c1322a21cA7feF25e, 20000000000000000000);\n        _activeGovernance = new TokenGovernance(curToken);\n    }\n\n    function changeActive() public {\n        require(_activeGovernance.getStatus(), \"vote not finalized\");\n        ERC20 curToken = new Coin(\"teste\", \"tst\", 0x88AcC3c7BFB23e6A58F2A80c1322a21cA7feF25e, 20000000000000000000);\n        changeGovernance(curToken);\n    }\n    \n    function changeGovernance(ERC20 newToken) public {\n        _activeGovernance = new TokenGovernance(newToken);\n    }\n\n    function getGovernance() public view returns(TokenGovernance) {\n        return _activeGovernance;\n    }\n\n    function getGovernanceStatus() public view returns(bool) {\n        return _activeGovernance.getStatus();\n    }\n\n    function getToken() public view returns(ERC20) {\n        return _activeGovernance.getToken();\n    }\n}",
  "sourcePath": "/Users/paulochade/Desktop/Truffle-React-Template/src/contracts/GovernanceFactory.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/GovernanceFactory.sol",
    "exportedSymbols": {
      "Coin": [
        739
      ],
      "Context": [
        712
      ],
      "ERC20": [
        587
      ],
      "GovernanceFactory": [
        844
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "TokenGovernance": [
        962
      ]
    },
    "id": 845,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 741,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "project:/src/contracts/TokenGovernance.sol",
        "file": "./TokenGovernance.sol",
        "id": 742,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 963,
        "src": "57:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/Coin.sol",
        "file": "./Coin.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 740,
        "src": "89:20:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 744,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 588,
        "src": "110:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          739,
          962
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 844,
        "linearizedBaseContracts": [
          844
        ],
        "name": "GovernanceFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e8776c26",
            "id": 747,
            "mutability": "mutable",
            "name": "_activeGovernance",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "201:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenGovernance_$962",
              "typeString": "contract TokenGovernance"
            },
            "typeName": {
              "id": 746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 745,
                "name": "TokenGovernance",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 962,
                "src": "201:15:5"
              },
              "referencedDeclaration": 962,
              "src": "201:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenGovernance_$962",
                "typeString": "contract TokenGovernance"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "262:183:5",
              "statements": [
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "mutability": "mutable",
                      "name": "curToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "272:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 751,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 750,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 587,
                          "src": "272:5:5"
                        },
                        "referencedDeclaration": 587,
                        "src": "272:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 761,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7465737465",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "298:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        "value": "teste"
                      },
                      {
                        "hexValue": "747374",
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "307:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        "value": "tst"
                      },
                      {
                        "hexValue": "307838384163433363374246423233653641353846324138306331333232613231634137666546323565",
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "314:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x88AcC3c7BFB23e6A58F2A80c1322a21cA7feF25e"
                      },
                      {
                        "hexValue": "3230303030303030303030303030303030303030",
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "358:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "289:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_Coin_$739_$",
                        "typeString": "function (string memory,string memory,address,uint256) payable returns (contract Coin)"
                      },
                      "typeName": {
                        "id": 754,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 753,
                          "name": "Coin",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 739,
                          "src": "293:4:5"
                        },
                        "referencedDeclaration": 739,
                        "src": "293:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Coin_$739",
                          "typeString": "contract Coin"
                        }
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "289:90:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Coin_$739",
                      "typeString": "contract Coin"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "272:107:5"
                },
                {
                  "expression": {
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "_activeGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "389:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 766,
                          "name": "curToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "429:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "409:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$587_$returns$_t_contract$_TokenGovernance_$962_$",
                          "typeString": "function (contract ERC20) returns (contract TokenGovernance)"
                        },
                        "typeName": {
                          "id": 764,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 763,
                            "name": "TokenGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 962,
                            "src": "413:15:5"
                          },
                          "referencedDeclaration": 962,
                          "src": "413:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenGovernance_$962",
                            "typeString": "contract TokenGovernance"
                          }
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "409:29:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "src": "389:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "389:49:5"
                }
              ]
            },
            "id": 771,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:2:5"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:5"
            },
            "scope": 844,
            "src": "248:197:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "482:230:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 775,
                            "name": "_activeGovernance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "500:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGovernance_$962",
                              "typeString": "contract TokenGovernance"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 940,
                          "src": "500:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "500:29:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f7465206e6f742066696e616c697a6564",
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "531:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92",
                          "typeString": "literal_string \"vote not finalized\""
                        },
                        "value": "vote not finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92",
                          "typeString": "literal_string \"vote not finalized\""
                        }
                      ],
                      "id": 774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "492:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "492:60:5"
                },
                {
                  "assignments": [
                    783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "curToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 797,
                      "src": "562:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 782,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 781,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 587,
                          "src": "562:5:5"
                        },
                        "referencedDeclaration": 587,
                        "src": "562:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7465737465",
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "588:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        "value": "teste"
                      },
                      {
                        "hexValue": "747374",
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "597:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        "value": "tst"
                      },
                      {
                        "hexValue": "307838384163433363374246423233653641353846324138306331333232613231634137666546323565",
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "604:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x88AcC3c7BFB23e6A58F2A80c1322a21cA7feF25e"
                      },
                      {
                        "hexValue": "3230303030303030303030303030303030303030",
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "648:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "579:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_Coin_$739_$",
                        "typeString": "function (string memory,string memory,address,uint256) payable returns (contract Coin)"
                      },
                      "typeName": {
                        "id": 785,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 784,
                          "name": "Coin",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 739,
                          "src": "583:4:5"
                        },
                        "referencedDeclaration": 739,
                        "src": "583:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Coin_$739",
                          "typeString": "contract Coin"
                        }
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:90:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Coin_$739",
                      "typeString": "contract Coin"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "562:107:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 794,
                        "name": "curToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "696:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 793,
                      "name": "changeGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "679:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$587_$returns$__$",
                        "typeString": "function (contract ERC20)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "679:26:5"
                }
              ]
            },
            "functionSelector": "b4ac0dfc",
            "id": 798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeActive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:2:5"
            },
            "returnParameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:5"
            },
            "scope": 844,
            "src": "451:261:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "771:66:5",
              "statements": [
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 804,
                      "name": "_activeGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "781:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 808,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "821:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "801:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$587_$returns$_t_contract$_TokenGovernance_$962_$",
                          "typeString": "function (contract ERC20) returns (contract TokenGovernance)"
                        },
                        "typeName": {
                          "id": 806,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 805,
                            "name": "TokenGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 962,
                            "src": "805:15:5"
                          },
                          "referencedDeclaration": 962,
                          "src": "805:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenGovernance_$962",
                            "typeString": "contract TokenGovernance"
                          }
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "801:29:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "src": "781:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "781:49:5"
                }
              ]
            },
            "functionSelector": "99572d6f",
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "748:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 800,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 799,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "748:5:5"
                    },
                    "referencedDeclaration": 587,
                    "src": "748:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:16:5"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:5"
            },
            "scope": 844,
            "src": "722:115:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "905:41:5",
              "statements": [
                {
                  "expression": {
                    "id": 819,
                    "name": "_activeGovernance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 747,
                    "src": "922:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "functionReturnParameters": 818,
                  "id": 820,
                  "nodeType": "Return",
                  "src": "915:24:5"
                }
              ]
            },
            "functionSelector": "289b3c0d",
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:5"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "888:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenGovernance_$962",
                    "typeString": "contract TokenGovernance"
                  },
                  "typeName": {
                    "id": 816,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 815,
                      "name": "TokenGovernance",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 962,
                      "src": "888:15:5"
                    },
                    "referencedDeclaration": 962,
                    "src": "888:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:17:5"
            },
            "scope": 844,
            "src": "843:103:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "1009:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 827,
                        "name": "_activeGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1026:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenGovernance_$962",
                          "typeString": "contract TokenGovernance"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 940,
                      "src": "1026:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 826,
                  "id": 830,
                  "nodeType": "Return",
                  "src": "1019:36:5"
                }
              ]
            },
            "functionSelector": "4a692204",
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGovernanceStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "980:2:5"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1003:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:6:5"
            },
            "scope": 844,
            "src": "952:110:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "1115:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 838,
                        "name": "_activeGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1132:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenGovernance_$962",
                          "typeString": "contract TokenGovernance"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 949,
                      "src": "1132:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$587_$",
                        "typeString": "function () view external returns (contract ERC20)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 837,
                  "id": 841,
                  "nodeType": "Return",
                  "src": "1125:35:5"
                }
              ]
            },
            "functionSelector": "21df0da7",
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:2:5"
            },
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "1108:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 835,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 834,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "1108:5:5"
                    },
                    "referencedDeclaration": 587,
                    "src": "1108:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:7:5"
            },
            "scope": 844,
            "src": "1068:99:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 845,
        "src": "167:1002:5"
      }
    ],
    "src": "32:1137:5"
  },
  "legacyAST": {
    "absolutePath": "project:/src/contracts/GovernanceFactory.sol",
    "exportedSymbols": {
      "Coin": [
        739
      ],
      "Context": [
        712
      ],
      "ERC20": [
        587
      ],
      "GovernanceFactory": [
        844
      ],
      "IERC20": [
        665
      ],
      "IERC20Metadata": [
        690
      ],
      "TokenGovernance": [
        962
      ]
    },
    "id": 845,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 741,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:5"
      },
      {
        "absolutePath": "project:/src/contracts/TokenGovernance.sol",
        "file": "./TokenGovernance.sol",
        "id": 742,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 963,
        "src": "57:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/Coin.sol",
        "file": "./Coin.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 740,
        "src": "89:20:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 744,
        "nodeType": "ImportDirective",
        "scope": 845,
        "sourceUnit": 588,
        "src": "110:55:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          739,
          962
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 844,
        "linearizedBaseContracts": [
          844
        ],
        "name": "GovernanceFactory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e8776c26",
            "id": 747,
            "mutability": "mutable",
            "name": "_activeGovernance",
            "nodeType": "VariableDeclaration",
            "scope": 844,
            "src": "201:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenGovernance_$962",
              "typeString": "contract TokenGovernance"
            },
            "typeName": {
              "id": 746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 745,
                "name": "TokenGovernance",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 962,
                "src": "201:15:5"
              },
              "referencedDeclaration": 962,
              "src": "201:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenGovernance_$962",
                "typeString": "contract TokenGovernance"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 770,
              "nodeType": "Block",
              "src": "262:183:5",
              "statements": [
                {
                  "assignments": [
                    752
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 752,
                      "mutability": "mutable",
                      "name": "curToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "272:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 751,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 750,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 587,
                          "src": "272:5:5"
                        },
                        "referencedDeclaration": 587,
                        "src": "272:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 761,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7465737465",
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "298:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        "value": "teste"
                      },
                      {
                        "hexValue": "747374",
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "307:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        "value": "tst"
                      },
                      {
                        "hexValue": "307838384163433363374246423233653641353846324138306331333232613231634137666546323565",
                        "id": 758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "314:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x88AcC3c7BFB23e6A58F2A80c1322a21cA7feF25e"
                      },
                      {
                        "hexValue": "3230303030303030303030303030303030303030",
                        "id": 759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "358:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "289:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_Coin_$739_$",
                        "typeString": "function (string memory,string memory,address,uint256) payable returns (contract Coin)"
                      },
                      "typeName": {
                        "id": 754,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 753,
                          "name": "Coin",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 739,
                          "src": "293:4:5"
                        },
                        "referencedDeclaration": 739,
                        "src": "293:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Coin_$739",
                          "typeString": "contract Coin"
                        }
                      }
                    },
                    "id": 760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "289:90:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Coin_$739",
                      "typeString": "contract Coin"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "272:107:5"
                },
                {
                  "expression": {
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 762,
                      "name": "_activeGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "389:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 766,
                          "name": "curToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 752,
                          "src": "429:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "409:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$587_$returns$_t_contract$_TokenGovernance_$962_$",
                          "typeString": "function (contract ERC20) returns (contract TokenGovernance)"
                        },
                        "typeName": {
                          "id": 764,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 763,
                            "name": "TokenGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 962,
                            "src": "413:15:5"
                          },
                          "referencedDeclaration": 962,
                          "src": "413:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenGovernance_$962",
                            "typeString": "contract TokenGovernance"
                          }
                        }
                      },
                      "id": 767,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "409:29:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "src": "389:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "389:49:5"
                }
              ]
            },
            "id": 771,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:2:5"
            },
            "returnParameters": {
              "id": 749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:5"
            },
            "scope": 844,
            "src": "248:197:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 797,
              "nodeType": "Block",
              "src": "482:230:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 775,
                            "name": "_activeGovernance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 747,
                            "src": "500:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenGovernance_$962",
                              "typeString": "contract TokenGovernance"
                            }
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getStatus",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 940,
                          "src": "500:27:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "500:29:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "766f7465206e6f742066696e616c697a6564",
                        "id": 778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "531:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92",
                          "typeString": "literal_string \"vote not finalized\""
                        },
                        "value": "vote not finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2ded3425803b169fe7879b2ab819117ff61f1c559c5f13da0f86b680a74c8d92",
                          "typeString": "literal_string \"vote not finalized\""
                        }
                      ],
                      "id": 774,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "492:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 780,
                  "nodeType": "ExpressionStatement",
                  "src": "492:60:5"
                },
                {
                  "assignments": [
                    783
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 783,
                      "mutability": "mutable",
                      "name": "curToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 797,
                      "src": "562:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$587",
                        "typeString": "contract ERC20"
                      },
                      "typeName": {
                        "id": 782,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 781,
                          "name": "ERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 587,
                          "src": "562:5:5"
                        },
                        "referencedDeclaration": 587,
                        "src": "562:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 792,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "7465737465",
                        "id": 787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "588:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        "value": "teste"
                      },
                      {
                        "hexValue": "747374",
                        "id": 788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "597:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        "value": "tst"
                      },
                      {
                        "hexValue": "307838384163433363374246423233653641353846324138306331333232613231634137666546323565",
                        "id": 789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "604:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x88AcC3c7BFB23e6A58F2A80c1322a21cA7feF25e"
                      },
                      {
                        "hexValue": "3230303030303030303030303030303030303030",
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "648:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        },
                        "value": "20000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e0d4f6e915eb01068ecd79ce922236bf16c38b2d88cccffcbc57ed53ef3b74aa",
                          "typeString": "literal_string \"teste\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8486bd01d0192a29421fde92e65e1694b267f0aae643c147b1680e59bbfd6d8a",
                          "typeString": "literal_string \"tst\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_20000000000000000000_by_1",
                          "typeString": "int_const 20000000000000000000"
                        }
                      ],
                      "id": 786,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "579:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_payable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$_t_contract$_Coin_$739_$",
                        "typeString": "function (string memory,string memory,address,uint256) payable returns (contract Coin)"
                      },
                      "typeName": {
                        "id": 785,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 784,
                          "name": "Coin",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 739,
                          "src": "583:4:5"
                        },
                        "referencedDeclaration": 739,
                        "src": "583:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Coin_$739",
                          "typeString": "contract Coin"
                        }
                      }
                    },
                    "id": 791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "579:90:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Coin_$739",
                      "typeString": "contract Coin"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "562:107:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 794,
                        "name": "curToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 783,
                        "src": "696:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC20_$587",
                          "typeString": "contract ERC20"
                        }
                      ],
                      "id": 793,
                      "name": "changeGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "679:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20_$587_$returns$__$",
                        "typeString": "function (contract ERC20)"
                      }
                    },
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:26:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "679:26:5"
                }
              ]
            },
            "functionSelector": "b4ac0dfc",
            "id": 798,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeActive",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 772,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "472:2:5"
            },
            "returnParameters": {
              "id": 773,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:5"
            },
            "scope": 844,
            "src": "451:261:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 812,
              "nodeType": "Block",
              "src": "771:66:5",
              "statements": [
                {
                  "expression": {
                    "id": 810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 804,
                      "name": "_activeGovernance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 747,
                      "src": "781:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 808,
                          "name": "newToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 801,
                          "src": "821:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ERC20_$587",
                            "typeString": "contract ERC20"
                          }
                        ],
                        "id": 807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "801:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_ERC20_$587_$returns$_t_contract$_TokenGovernance_$962_$",
                          "typeString": "function (contract ERC20) returns (contract TokenGovernance)"
                        },
                        "typeName": {
                          "id": 806,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 805,
                            "name": "TokenGovernance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 962,
                            "src": "805:15:5"
                          },
                          "referencedDeclaration": 962,
                          "src": "805:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenGovernance_$962",
                            "typeString": "contract TokenGovernance"
                          }
                        }
                      },
                      "id": 809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "801:29:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenGovernance_$962",
                        "typeString": "contract TokenGovernance"
                      }
                    },
                    "src": "781:49:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "id": 811,
                  "nodeType": "ExpressionStatement",
                  "src": "781:49:5"
                }
              ]
            },
            "functionSelector": "99572d6f",
            "id": 813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "changeGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 801,
                  "mutability": "mutable",
                  "name": "newToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 813,
                  "src": "748:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 800,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 799,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "748:5:5"
                    },
                    "referencedDeclaration": 587,
                    "src": "748:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:16:5"
            },
            "returnParameters": {
              "id": 803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:5"
            },
            "scope": 844,
            "src": "722:115:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 821,
              "nodeType": "Block",
              "src": "905:41:5",
              "statements": [
                {
                  "expression": {
                    "id": 819,
                    "name": "_activeGovernance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 747,
                    "src": "922:17:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "functionReturnParameters": 818,
                  "id": 820,
                  "nodeType": "Return",
                  "src": "915:24:5"
                }
              ]
            },
            "functionSelector": "289b3c0d",
            "id": 822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGovernance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:5"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 817,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 822,
                  "src": "888:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_TokenGovernance_$962",
                    "typeString": "contract TokenGovernance"
                  },
                  "typeName": {
                    "id": 816,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 815,
                      "name": "TokenGovernance",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 962,
                      "src": "888:15:5"
                    },
                    "referencedDeclaration": 962,
                    "src": "888:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenGovernance_$962",
                      "typeString": "contract TokenGovernance"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "887:17:5"
            },
            "scope": 844,
            "src": "843:103:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 831,
              "nodeType": "Block",
              "src": "1009:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 827,
                        "name": "_activeGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1026:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenGovernance_$962",
                          "typeString": "contract TokenGovernance"
                        }
                      },
                      "id": 828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getStatus",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 940,
                      "src": "1026:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:29:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 826,
                  "id": 830,
                  "nodeType": "Return",
                  "src": "1019:36:5"
                }
              ]
            },
            "functionSelector": "4a692204",
            "id": 832,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getGovernanceStatus",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "980:2:5"
            },
            "returnParameters": {
              "id": 826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 825,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 832,
                  "src": "1003:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 824,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1003:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1002:6:5"
            },
            "scope": 844,
            "src": "952:110:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 842,
              "nodeType": "Block",
              "src": "1115:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 838,
                        "name": "_activeGovernance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 747,
                        "src": "1132:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenGovernance_$962",
                          "typeString": "contract TokenGovernance"
                        }
                      },
                      "id": 839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 949,
                      "src": "1132:26:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ERC20_$587_$",
                        "typeString": "function () view external returns (contract ERC20)"
                      }
                    },
                    "id": 840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "functionReturnParameters": 837,
                  "id": 841,
                  "nodeType": "Return",
                  "src": "1125:35:5"
                }
              ]
            },
            "functionSelector": "21df0da7",
            "id": 843,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1085:2:5"
            },
            "returnParameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 836,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 843,
                  "src": "1108:5:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$587",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 835,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 834,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 587,
                      "src": "1108:5:5"
                    },
                    "referencedDeclaration": 587,
                    "src": "1108:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$587",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1107:7:5"
            },
            "scope": 844,
            "src": "1068:99:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 845,
        "src": "167:1002:5"
      }
    ],
    "src": "32:1137:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x61679621C7e70390aE62a454AeBCA02469eC4a01",
      "transactionHash": "0x39e1b99061e52b7f020e7b8545a3a19c475ac32cf77560d72446851cd06f8a0e"
    }
  },
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-04-14T00:09:47.890Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}